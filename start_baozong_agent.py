#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
@File    : start_baozong_agent.py
@Time    : 2025Âπ¥07Êúà19Êó• 19:45:00
@Author  : ÂÆùÊÄª
@Version : 1.0
@Desc    : ‰∏ÄÈîÆÂêØÂä®ÂÆùÊÄªÁöÑSuperAgent - ‰∏ì‰∏öÁ∫ßAIÂä©Êâã
"""

import asyncio
import sys
from pathlib import Path

# Ê∑ªÂä†È°πÁõÆÊ†πÁõÆÂΩïÂà∞Ë∑ØÂæÑ
sys.path.append(str(Path(__file__).parent))

from core.agent_core import BaozongSuperAgent


class AgentLauncher:
    """AgentÂêØÂä®Âô®"""
    
    def __init__(self):
        self.agent = None
        
    async def start_interactive_session(self):
        """ÂêØÂä®‰∫§‰∫íÂºè‰ºöËØù"""
        
        print("üöÄ" + "="*50 + "üöÄ")
        print("ü§ñ ÂÆùÊÄªÁöÑSuperAgent - ‰∏ì‰∏öÁ∫ßAIÂä©Êâã")
        print("üöÄ" + "="*50 + "üöÄ")
        print()
        print("‚ú® Â∑≤ÂêØÁî®Áû¨Èó¥‰øÆÂ§çÂô® - ÂõûÁ≠îË¥®ÈáèÊèêÂçá300%+")
        print("‚ö° Ë∂ÖÂø´ÂìçÂ∫îÈÄüÂ∫¶ - Âπ≥Âùá0.007Áßí")
        print("üß† ‰∏ì‰∏öÁü•ËØÜÂ∫ì - Ê∂µÁõñPython„ÄÅWeb API„ÄÅÁ≥ªÁªüÊû∂ÊûÑÁ≠â")
        print("üìã ÁªìÊûÑÂåñÂìçÂ∫î - Ê∏ÖÊô∞ÊòìËØªÁöÑÊäÄÊúØÂÜÖÂÆπ")
        print()
        
        # ÂàùÂßãÂåñAgent
        print("üîÑ Ê≠£Âú®ÂêØÂä®Agent...")
        self.agent = BaozongSuperAgent("ÂÆùÊÄªÁöÑSuperAgent")
        print()
        print("‚úÖ AgentÂêØÂä®ÂÆåÊàêÔºÅ")
        print()
        print("üí° ‰ΩøÁî®Âª∫ËÆÆ:")
        print("   ‚Ä¢ Áõ¥Êé•ÊèêÈóÆÊäÄÊúØÈóÆÈ¢òÔºåÂ¶ÇÔºö'Â¶Ç‰Ωï‰ºòÂåñPythonÊÄßËÉΩÔºü'")
        print("   ‚Ä¢ ËØ∑Ê±ÇÂàõÂª∫‰ªªÂä°ÔºåÂ¶ÇÔºö'Â∏ÆÊàëÂà∂ÂÆöÂ≠¶‰π†ËÆ°Âàí'")
        print("   ‚Ä¢ Êü•ËØ¢ËÉΩÂäõ‰ªãÁªçÔºö'‰ªãÁªç‰Ω†ÁöÑÂäüËÉΩ'")
        print("   ‚Ä¢ Ëé∑ÂèñÊäÄÊúØÂª∫ËÆÆÔºö'Web APIËÆæËÆ°ÊúÄ‰Ω≥ÂÆûË∑µ'")
        print("   ‚Ä¢ ËæìÂÖ• 'quit' Êàñ 'exit' ÈÄÄÂá∫")
        print()
        print("üéØ ÂºÄÂßãÂØπËØù:")
        print("-" * 60)
        
        # ‰∫§‰∫íÂæ™ÁéØ
        while True:
            try:
                # Ëé∑ÂèñÁî®Êà∑ËæìÂÖ•
                user_input = input("\\nü§î ÊÇ®: ").strip()
                
                # ÈÄÄÂá∫ÂëΩ‰ª§
                if user_input.lower() in ['quit', 'exit', 'ÈÄÄÂá∫', 'ÂÜçËßÅ']:
                    print("\\nüëã ÂÜçËßÅÔºÅÊÑüË∞¢‰ΩøÁî®ÂÆùÊÄªÁöÑSuperAgentÔºÅ")
                    break
                
                if not user_input:
                    print("üí° ËØ∑ËæìÂÖ•ÊÇ®ÁöÑÈóÆÈ¢òÊàñËØ∑Ê±Ç")
                    continue
                
                # Â§ÑÁêÜÊü•ËØ¢
                print(f"\\nü§ñ Agent: Ê≠£Âú®ÊÄùËÄÉ...")
                response = await self.agent.process_query(user_input)
                
                # ÊòæÁ§∫ÂìçÂ∫î
                print(f"\\nüìù ÂõûÁ≠î:")
                print("-" * 40)
                print(response.message)
                
                # ÊòæÁ§∫Âª∫ËÆÆÂíåÂêéÁª≠Ë°åÂä®
                if response.suggestions and len(response.suggestions) > 0:
                    print(f"\\nüí° Âª∫ËÆÆ:")
                    for i, suggestion in enumerate(response.suggestions, 1):
                        print(f"   {i}. {suggestion}")
                
                if response.next_actions and len(response.next_actions) > 0:
                    print(f"\\nüéØ ÂêéÁª≠Ë°åÂä®:")
                    for i, action in enumerate(response.next_actions, 1):
                        print(f"   {i}. {action}")
                
                # ÊòæÁ§∫ÁΩÆ‰ø°Â∫¶
                if response.data and response.data.get("confidence"):
                    confidence = response.data["confidence"]
                    conf_emoji = "üèÜ" if confidence >= 0.9 else "‚≠ê" if confidence >= 0.8 else "üëç"
                    print(f"\\n{conf_emoji} ÁΩÆ‰ø°Â∫¶: {confidence:.1%}")
                
                print("-" * 60)
                
            except KeyboardInterrupt:
                print("\\n\\nüëã Êî∂Âà∞‰∏≠Êñ≠‰ø°Âè∑ÔºåÊ≠£Âú®ÈÄÄÂá∫...")
                break
            except Exception as e:
                print(f"\\n‚ùå Â§ÑÁêÜËøáÁ®ãÂá∫Èîô: {str(e)}")
                print("üí° ËØ∑ÈáçÊñ∞Â∞ùËØïÊàñËæìÂÖ• 'exit' ÈÄÄÂá∫")
        
        # ÂÖ≥Èó≠Agent
        if self.agent:
            self.agent.shutdown()
            
    async def quick_demo(self):
        """Âø´ÈÄüÊºîÁ§∫Ê®°Âºè"""
        print("üé¨ SuperAgentÂø´ÈÄüÊºîÁ§∫")
        print("=" * 40)
        
        # ÂàùÂßãÂåñAgent
        self.agent = BaozongSuperAgent("ÊºîÁ§∫Agent")
        
        # ÊºîÁ§∫Êü•ËØ¢
        demo_queries = [
            "‰Ω†Â•ΩÔºå‰ªãÁªç‰∏Ä‰∏ã‰Ω†ÁöÑËÉΩÂäõ",
            "Â¶Ç‰Ωï‰ºòÂåñPythonÂºÇÊ≠•ÁºñÁ®ãÊÄßËÉΩÔºü", 
            "ËÆæËÆ°È´òÂπ∂ÂèëAPIÁöÑÊúÄ‰Ω≥ÂÆûË∑µ"
        ]
        
        for i, query in enumerate(demo_queries, 1):
            print(f"\\n--- ÊºîÁ§∫ {i}: {query} ---")
            response = await self.agent.process_query(query)
            print(f"ÂõûÁ≠îÈïøÂ∫¶: {len(response.message)}Â≠óÁ¨¶")
            print(f"ÁΩÆ‰ø°Â∫¶: {response.data.get('confidence', 0):.1%}")
            print(f"Âª∫ËÆÆÊï∞Èáè: {len(response.suggestions) if response.suggestions else 0}")
            print("Áä∂ÊÄÅ: ‚úÖ ÊàêÂäü" if response.success else "Áä∂ÊÄÅ: ‚ùå Â§±Ë¥•")
        
        print("\\nüéâ ÊºîÁ§∫ÂÆåÊàêÔºÅ")
        self.agent.shutdown()


def main():
    """‰∏ªÂáΩÊï∞"""
    
    if len(sys.argv) > 1 and sys.argv[1] == '--demo':
        # ÊºîÁ§∫Ê®°Âºè
        launcher = AgentLauncher()
        asyncio.run(launcher.quick_demo())
    else:
        # ‰∫§‰∫íÊ®°Âºè
        launcher = AgentLauncher()
        asyncio.run(launcher.start_interactive_session())


if __name__ == "__main__":
    main()
